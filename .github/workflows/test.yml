name: test
on:
  pull_request:
    paths:
      - poetry.lock
      - pyproject.toml
      - 'sample/**'
      - .github/workflows/test.yml
  push:
    branches:
      - main

env:
  BRANCH_NAME: update-requirements-txt

jobs:
  unittest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Poetry
        uses: ./.github/actions/setup-poetry

      - name: Export requirements.txt
        run: |
          poetry export -f requirements.txt --output requirements.txt --without-hashes

      - name: Start mysql
        run: |
          docker compose -f docker/docker-compose.yml up -d mysql --wait

      - name: Pytest
        timeout-minutes: 1
        run: |
          make init test

  update-requirements-txt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Poetry
        uses: ./.github/actions/setup-poetry

      - name: Export requirements.txt
        run: |
          poetry export -f requirements.txt --output requirements.txt --without-hashes

      - name: check if need to commit
        id: need_commit
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "need_commit=true" >> "$GITHUB_OUTPUT"
          else
            echo "need_commit=false" >> "$GITHUB_OUTPUT"
          fi

      - name: commit and push
        if: steps.need_commit.outputs.need_commit == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b ${{ env.BRANCH_NAME }}
          git add .
          git commit -m 'update requirements.txt'
          git push -u origin HEAD -f

      - name: check if pr exists
        id: check_pr
        if: steps.need_commit.outputs.need_commit == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # used by gh
        run: |
          echo "count=$(gh pr list -S head:${{ env.BRANCH_NAME }} -B ${{ github.event.pull_request.base.ref || github.event.repository.default_branch }} | wc -l)" >> "$GITHUB_OUTPUT"

      - name: create pr
        if: ${{ steps.need_commit.outputs.need_commit == 'true' && steps.check_pr.outputs.count == 0 }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # used by gh
        run: |
          gh pr create -B "${{ github.event.pull_request.base.ref || github.event.repository.default_branch }}" -t "chore: update requirements.txt" -b ""

