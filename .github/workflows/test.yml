name: test
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  path-filter:
    outputs:
      test: ${{steps.changes.outputs.test}}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            test:
              - poetry.lock
              - pyproject.toml
              - 'sample/**'
              - 'docker/**'
              - .github/workflows/test.yml

  status-check-test:
    # This job is used for the branch's branch protection rule's status check.
    # If all dependent jobs succeed or are skipped this job succeeds.
    runs-on: ubuntu-latest
    needs:
      - unittest
    permissions: {}
    if: failure()
    steps:
      - run: exit 1

  unittest:
    if: needs.path-filter.outputs.test == 'true'
    needs: path-filter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Poetry
        uses: ./.github/actions/setup-poetry

      - name: Export requirements.txt
        run: |
          poetry export -f requirements.txt --output requirements.txt --without-hashes

      - name: Start mysql
        run: |
          docker compose -f docker/docker-compose.yml up -d mysql --wait

      - name: Pytest
        timeout-minutes: 1
        run: |
          make init test

      - name: Codecov
        uses: codecov/codecov-action@v5
